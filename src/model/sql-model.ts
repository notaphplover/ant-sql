import { Entity, Model } from '@antjs/ant-js';
import { BaseSqlModel } from './base-sql-model';
import { SqlColumn } from './sql-column';

export interface SqlModel<TEntity extends Entity> extends BaseSqlModel<SqlColumn>, Model<TEntity> {
  /**
   * Gets a column by its alias
   */
  columnByAlias(alias: string): SqlColumn;
  /**
   * Gets a column by an SQL alias.
   * @param alias Alias of the column at the SQL server.
   * @returns Column.
   */
  columnBySql(alias: string): SqlColumn;
  /**
   * Transforms an entity into a secondary object.
   * @param entity Entity to process.
   * @returns Secondary object
   */
  entityToSecondary(entity: TEntity): any;
  /**
   * Gets the auto generated column of the model.
   * @returns Auto generated column of the model or null if no column is auto generated.
   */
  getAutoGeneratedColumn(): SqlColumn;
  /**
   * Transforms multiple entities into primary objects.
   * @param entities Entities to process.
   * @returns Secondary objects generated.
   */
  mEntityToSecondary(entities: TEntity[]): any[];
  /**
   * Process secondary objects and generates entities from them.
   * @param secondaries Secondary objects to process.
   * @returns Entities generated.
   */
  mSecondaryToEntity(secondaries: any[]): TEntity[];
  /**
   * Creates an entity from a secondary object.
   * @param secondary Secondary entity to transform
   * @returns Entity generated.
   */
  secondaryToEntity(secondary: any): TEntity;
}
